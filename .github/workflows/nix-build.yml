name: "Nix Build"
on:
  pull_request:
  push:
    branches:
      - development
      - master
jobs:
  nix-build:
    name: ${{ matrix.os }} / Nix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest # Fails with a 'non-portable path to file' error
    steps:
    - uses: actions/checkout@v2
    - uses: cachix/install-nix-action@v8
    - name: free disk space
      run: |
        if [[ "${{matrix.os}}" == "ubuntu-latest" ]]
        then
          sudo rm -rf /opt
        fi
    - uses: cachix/cachix-action@v6
      with:
        name: validity
    - uses: cachix/cachix-action@v6
      with:
        name: cursor
    - uses: cachix/cachix-action@v6
      with:
        name: mergeful
    - uses: cachix/cachix-action@v6
      with:
        name: yamlparse
    - uses: cachix/cachix-action@v6
      with:
        name: smos
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - run: nix-build default.nix
    - run: nix-build nix/release.nix

  stack-build:
    name: ${{ matrix.os }} / Stack ${{ matrix.stack }} / GHC ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        stack:
          - 2.1.3
        ghc:
          - 8.6.5
    steps:
      - uses: actions/checkout@v2
        if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master' || github.event.ref == 'refs/heads/development'

      - uses: actions/setup-haskell@v1.1
        name: Setup Haskell Stack
        with:
          ghc-version: ${{ matrix.ghc }}
          stack-version: ${{ matrix.stack }}

      - uses: actions/cache@v1
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack

      - name: Build
        run: |
          stack install --system-ghc autoexporter && stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks

      - name: Test
        run: |
          stack test --system-ghc

